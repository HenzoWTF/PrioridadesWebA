@page "/DetailsTickets/Id={Id:int}"
@using Library.Models
@inject HttpClient httpClient
@inject NavigationManager navigation

<PageTitle>View Ticket</PageTitle>
<div class="container">
	<div class="card shadow-lg">
		@*Header*@
		<div class="card-header">
			<h3><strong>View Ticket</strong></h3>
		</div>
		@*Body*@
		<div class="card-body">
			@*Datos*@
			<ul>
				<li><p><strong>TicketId:</strong> @ticket.TicketsId</p></li>
				<li><p><strong>Fecha:</strong> @ticket.Fecha.ToShortDateString()</p></li>
				<li><p><strong>Asunto:</strong> @ticket.Asunto</p></li>
				<li><p><strong>SolicitadoPor:</strong> @ticket.SolicitadoPor</p></li>
				<li><p><strong>ClienteId:</strong> @ticket.ClientesId</p></li>
				<li><p><strong>SistemaId:</strong> @ticket.SistemasId</p></li>
				<li><p><strong>PrioridadId:</strong> @ticket.PrioridadesId</p></li>
				<li><p><strong>Descripci&oacute;n:</strong> @ticket.Descripcion</p></li>

			</ul>
		</div>

		<div class="card-footer d-flex justify-content-center">
			<div class="btn-group">
				<a href="IndexTickets" class="btn btn-outline-primary"><i class="bi bi-arrow-left" /> Volver</a>
			</div>
		</div>
	</div>
</div>
@*Mensaje*@
@mensaje

@code {
	[Parameter]
	public int Id { get; set; }
	public Tickets ticket { get; set; } = new Tickets();
	public string mensaje { get; set; } = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		ticket = await httpClient.GetFromJsonAsync<Tickets>($"api/Tickets/{Id}");
	}


}